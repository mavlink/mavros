#!/usr/bin/env python
# vim: set et fenc=utf-8 ft=python ff=unix sts=4 sw=4 ts=4 :
#
# Copyright 2014 Vladimir Ermakov.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

from __future__ import print_function

import argparse

import rospy
from mavros.utils import *
from mavros.ftp import *


def do_list(args):
    rospy.init_node("mavftp", anonymous=True)

    for ent in ftp_listdir(args.path, args.mavros_ns):
        n = ent.name
        if ent.type == FileEntry.TYPE_DIRECTORY:
            n += '/'
        else:
            n += '\t{}'.format(ent.size)

        print(n)


def do_cat(args):
    rospy.init_node("mavftp", anonymous=True)

    with FTPFile(args.path, 'r', args.mavros_ns) as fd:
        data = fd.read(fd.size)
        sys.stdout.write(data)


def do_remove(args):
    rospy.init_node("mavftp", anonymous=True)

    ftp_unlink(args.path, args.mavros_ns)


def do_reset(args):
    rospy.init_node("mavftp", anonymous=True)

    ftp_reset_server(args.mavros_ns)


def do_mkdir(args):
    rospy.init_node("mavftp", anonymous=True)

    ftp_mkdir(args.path, args.mavros_ns)


def do_rmdir(args):
    rospy.init_node("mavftp", anonymous=True)

    ftp_rmdir(args.path, args.mavros_ns)


def do_upload(args):
    rospy.init_node("mavftp", anonymous=True)

    mode = 'cw' if args.no_overwrite else 'w'

    with args.file as from_fd:
        with FTPFile(args.path, mode) as to_fd:
            while True:
                buf = from_fd.read(1024)
                if len(buf) == 0:
                    break;

                to_fd.write(buf)


def main():
    parser = argparse.ArgumentParser(description="File manipulation tool for MAVLink-FTP.")
    parser.add_argument('-n', '--mavros-ns', help="ROS node namespace", default="/mavros")
    parser.add_argument('-v', '--verbose', action='store_true', help="verbose output")
    subarg = parser.add_subparsers()

    list_args = subarg.add_parser('list', help="list files and dirs")
    list_args.set_defaults(func=do_list)
    list_args.add_argument('path', type=str, help="directory path")

    cat_args = subarg.add_parser('cat', help="cat file")
    cat_args.set_defaults(func=do_cat)
    cat_args.add_argument('path', type=str, help="file path")

    remove_args = subarg.add_parser('remove', help="remove file")
    remove_args.set_defaults(func=do_remove)
    remove_args.add_argument('path', type=str, help="file path")

    mkdir_args = subarg.add_parser('mkdir', help="create direcotory")
    mkdir_args.set_defaults(func=do_mkdir)
    # mkdir_args.add_argument('-p', action='store_true', help="dir path")
    mkdir_args.add_argument('path', type=str, help="dir path")

    rmdir_args = subarg.add_parser('rmdir', help="remove directory")
    rmdir_args.set_defaults(func=do_rmdir)
    rmdir_args.add_argument('path', type=str, help="dir path")

    upload_args = subarg.add_parser('upload', help="upload file")
    upload_args.set_defaults(func=do_upload)
    upload_args.add_argument('file', type=argparse.FileType('rb'), help="file to send")
    upload_args.add_argument('path', type=str, help="save path")
    upload_args.add_argument('-n', '--no-overwrite', action="store_true", help="do not overwrite existing file")

    reset_args = subarg.add_parser('reset', help="reset")
    reset_args.set_defaults(func=do_reset)

    args = parser.parse_args(rospy.myargv(argv=sys.argv)[1:])
    args.func(args)


if __name__ == '__main__':
    main()
